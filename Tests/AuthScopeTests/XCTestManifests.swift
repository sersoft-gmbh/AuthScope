#if !canImport(ObjectiveC)
import XCTest

extension AccessRangeProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AccessRangeProtocolTests = [
        ("testAccessRangeProtocolDefaultInitWithInvalidRawValue", testAccessRangeProtocolDefaultInitWithInvalidRawValue),
        ("testAccessRangeProtocolDefaultInitWithValidRawValue", testAccessRangeProtocolDefaultInitWithValidRawValue),
    ]
}

extension ScopeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScopeTests = [
        ("testScopeEmptyInitializer", testScopeEmptyInitializer),
        ("testScopeEquatabilityIsBasedOnAccessRange", testScopeEquatabilityIsBasedOnAccessRange),
        ("testScopeHashingIsBasedOnAccessRange", testScopeHashingIsBasedOnAccessRange),
        ("testScopeInitializerWithAccessRangeCollection", testScopeInitializerWithAccessRangeCollection),
        ("testScopeInitializerWithAccessRangeSet", testScopeInitializerWithAccessRangeSet),
        ("testScopeInitializerWithAccessRangeVariadicList", testScopeInitializerWithAccessRangeVariadicList),
    ]
}

extension Scope_CodableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_CodableTests = [
        ("testScopeDecoding", testScopeDecoding),
        ("testScopeEncoding", testScopeEncoding),
    ]
}

extension Scope_CollectionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_CollectionTests = [
        ("testScopeEndIndex", testScopeEndIndex),
        ("testScopeFiltering", testScopeFiltering),
        ("testScopeIndexAfterCalculation", testScopeIndexAfterCalculation),
        ("testScopeIndexSubscript", testScopeIndexSubscript),
        ("testScopeIsEmpty", testScopeIsEmpty),
        ("testScopeStartIndex", testScopeStartIndex),
    ]
}

extension Scope_CustomStringConvertibleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_CustomStringConvertibleTests = [
        ("testScopeDescription", testScopeDescription),
    ]
}

extension Scope_DefaultsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_DefaultsTests = [
        ("testScopeAllDefault", testScopeAllDefault),
    ]
}

extension Scope_RegularExpressionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_RegularExpressionsTests = [
        ("testScopeContainsAllRegExp", testScopeContainsAllRegExp),
        ("testScopeContainsAnyRegExp", testScopeContainsAnyRegExp),
        ("testScopeExactMatchRegExp", testScopeExactMatchRegExp),
    ]
}

extension Scope_ScopeStringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_ScopeStringTests = [
        ("testScopeInitializerWithScopeString", testScopeInitializerWithScopeString),
        ("testScopeStringCreation", testScopeStringCreation),
        ("testScopeStringRoundtrip", testScopeStringRoundtrip),
    ]
}

extension Scope_SetAlgebraTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Scope_SetAlgebraTests = [
        ("testScopeCreationWithArrayLiteral", testScopeCreationWithArrayLiteral),
        ("testScopeInsertion", testScopeInsertion),
        ("testScopeIntersection", testScopeIntersection),
        ("testScopeIntersectionForming", testScopeIntersectionForming),
        ("testScopeRemoval", testScopeRemoval),
        ("testScopeSymmetricDifference", testScopeSymmetricDifference),
        ("testScopeSymmetricDifferenceForming", testScopeSymmetricDifferenceForming),
        ("testScopeUnion", testScopeUnion),
        ("testScopeUnionForming", testScopeUnionForming),
        ("testScopeUpdate", testScopeUpdate),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AccessRangeProtocolTests.__allTests__AccessRangeProtocolTests),
        testCase(ScopeTests.__allTests__ScopeTests),
        testCase(Scope_CodableTests.__allTests__Scope_CodableTests),
        testCase(Scope_CollectionTests.__allTests__Scope_CollectionTests),
        testCase(Scope_CustomStringConvertibleTests.__allTests__Scope_CustomStringConvertibleTests),
        testCase(Scope_DefaultsTests.__allTests__Scope_DefaultsTests),
        testCase(Scope_RegularExpressionsTests.__allTests__Scope_RegularExpressionsTests),
        testCase(Scope_ScopeStringTests.__allTests__Scope_ScopeStringTests),
        testCase(Scope_SetAlgebraTests.__allTests__Scope_SetAlgebraTests),
    ]
}
#endif
