{"Structs/Scope.html#/s:9AuthScope0B0V12accessRangesACyxGShyxG_tcfc":{"name":"init(accessRanges:)","abstract":"<p>Creates a new scope with the given <code>Set</code> of access ranges.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V12accessRangesACyxGqd___tc7ElementQyd__RszSlRd__lufc":{"name":"init(accessRanges:)","abstract":"<p>Creates a new scope with the given collection of access ranges.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V12accessRangesACyxGxd_tcfc":{"name":"init(accessRanges:)","abstract":"<p>Creates a new scope with the given list of access ranges.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0VACyxGycfc":{"name":"init()","abstract":"<p>Creates a new, empty scope.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"Scope"},"Structs/Scope.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"Scope"},"Structs/Scope.html#/s:ST7ElementQa":{"name":"Element","parent_name":"Scope"},"Structs/Scope.html#/s:Sl5IndexQa":{"name":"Index","parent_name":"Scope"},"Structs/Scope.html#/s:Sl7isEmptySbvp":{"name":"isEmpty","parent_name":"Scope"},"Structs/Scope.html#/s:Sl10startIndex0B0Qzvp":{"name":"startIndex","parent_name":"Scope"},"Structs/Scope.html#/s:Sl8endIndex0B0Qzvp":{"name":"endIndex","parent_name":"Scope"},"Structs/Scope.html#/s:Sly7ElementQz5IndexQzcip":{"name":"subscript(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:Sl5index5after5IndexQzAD_tF":{"name":"index(after:)","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V6filteryACyxGSbxKXEKF":{"name":"filter(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0VAAs12CaseIterableRzrlE3allACyxGvpZ":{"name":"all","abstract":"<p>Returns a scope with all possible access ranges.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V16exactMatchRegExpSSvp":{"name":"exactMatchRegExp","abstract":"<p>Returns a regular expression string that matches a string that has exactly the access ranges in self (not more, not less).</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V17containsAllRegExpSSvp":{"name":"containsAllRegExp","abstract":"<p>Returns a regular expression string that matches a string that has at least the access ranges in self (but can have more).</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V17containsAnyRegExpSSvp":{"name":"containsAnyRegExp","abstract":"<p>Returns a regular expression string that matches a string that has at least one of access ranges in self (but not all).</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V11scopeStringSSvp":{"name":"scopeString","abstract":"<p>A string containing all access ranges in self seperated by space.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:9AuthScope0B0V11scopeStringACyxGqd___tKcSyRd__lufc":{"name":"init(scopeString:)","abstract":"<p>Creates a new scope from a given scope string. Throws an error if the string contains invalid access ranges.</p>","parent_name":"Scope"},"Structs/Scope.html#/s:s25ExpressibleByArrayLiteralP0cD7ElementQa":{"name":"ArrayLiteralElement","parent_name":"Scope"},"Structs/Scope.html#/s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc":{"name":"init(arrayLiteral:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP5unionyxxnF":{"name":"union(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP9formUnionyyxnF":{"name":"formUnion(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP12intersectionyxxF":{"name":"intersection(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP16formIntersectionyyxF":{"name":"formIntersection(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP19symmetricDifferenceyxxnF":{"name":"symmetricDifference(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP23formSymmetricDifferenceyyxnF":{"name":"formSymmetricDifference(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP6insertySb8inserted_7ElementQz17memberAfterInserttAFnF":{"name":"insert(_:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP6update4with7ElementQzSgAFn_tF":{"name":"update(with:)","parent_name":"Scope"},"Structs/Scope.html#/s:s10SetAlgebraP6removey7ElementQzSgAEF":{"name":"remove(_:)","parent_name":"Scope"},"Structs/InvalidAccessRangeError.html#/s:9AuthScope23InvalidAccessRangeErrorV8rawValueSSvp":{"name":"rawValue","abstract":"<p>The raw value of the access range that didn&rsquo;t pass validation.</p>","parent_name":"InvalidAccessRangeError"},"Structs/InvalidAccessRangeError.html#/s:9AuthScope23InvalidAccessRangeErrorV06accessE4TypeypXpvp":{"name":"accessRangeType","abstract":"<p>The type of the access range that was used to validate above&rsquo;s <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/InvalidAccessRangeError.html#/s:9AuthScope23InvalidAccessRangeErrorV8rawValueSSvp\">rawValue</a></code>.</p>","parent_name":"InvalidAccessRangeError"},"Structs/InvalidAccessRangeError.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"InvalidAccessRangeError"},"Structs/InvalidAccessRangeError.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSvp":{"name":"debugDescription","parent_name":"InvalidAccessRangeError"},"Structs/InvalidAccessRangeError.html":{"name":"InvalidAccessRangeError","abstract":"<p>The error thrown when an access range is initialized with an invalid raw value.</p>"},"Structs/Scope.html":{"name":"Scope"},"Protocols/AccessRangeProtocol.html#/s:9AuthScope19AccessRangeProtocolP10validatingxqd___tKcSyRd__lufc":{"name":"init(validating:)","abstract":"<p>Creates an access range with the given raw value or throws an error (typically <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/InvalidAccessRangeError.html\">InvalidAccessRangeError</a></code>) if it&rsquo;s not a valid raw value.</p>","parent_name":"AccessRangeProtocol"},"Protocols/AccessRangeProtocol.html":{"name":"AccessRangeProtocol","abstract":"<p>Describes an access range type. Typically an enum.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}